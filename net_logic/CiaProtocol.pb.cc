// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CiaProtocol.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "CiaProtocol.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* ciaMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ciaMessage_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_CiaProtocol_2eproto() {
  protobuf_AddDesc_CiaProtocol_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "CiaProtocol.proto");
  GOOGLE_CHECK(file != NULL);
  ciaMessage_descriptor_ = file->message_type(0);
  static const int ciaMessage_offsets_[22] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ciaMessage, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ciaMessage, signalid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ciaMessage, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ciaMessage, pn_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ciaMessage, appid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ciaMessage, authkey_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ciaMessage, imsi_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ciaMessage, transid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ciaMessage, authcode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ciaMessage, timeout_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ciaMessage, des_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ciaMessage, imei_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ciaMessage, mac_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ciaMessage, bluetooth_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ciaMessage, androidid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ciaMessage, brand_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ciaMessage, phonetype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ciaMessage, systemversion_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ciaMessage, appname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ciaMessage, appversion_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ciaMessage, packagename_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ciaMessage, sdkversion_),
  };
  ciaMessage_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ciaMessage_descriptor_,
      ciaMessage::default_instance_,
      ciaMessage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ciaMessage, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ciaMessage, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ciaMessage));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_CiaProtocol_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ciaMessage_descriptor_, &ciaMessage::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_CiaProtocol_2eproto() {
  delete ciaMessage::default_instance_;
  delete ciaMessage_reflection_;
}

void protobuf_AddDesc_CiaProtocol_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\021CiaProtocol.proto\"\377\002\n\nciaMessage\022\014\n\004ty"
    "pe\030\001 \002(\t\022\020\n\010signalId\030\002 \001(\t\022\016\n\006status\030\003 \001"
    "(\t\022\n\n\002pn\030\004 \001(\t\022\r\n\005appId\030\005 \001(\t\022\017\n\007authKey"
    "\030\006 \001(\t\022\014\n\004imsi\030\007 \001(\t\022\017\n\007transId\030\010 \001(\t\022\020\n"
    "\010authCode\030\t \001(\t\022\017\n\007timeout\030\n \001(\t\022\013\n\003des\030"
    "\013 \001(\t\022\014\n\004imei\030\014 \001(\t\022\013\n\003mac\030\r \001(\t\022\021\n\tblue"
    "tooth\030\016 \001(\t\022\021\n\tandroidId\030\017 \001(\t\022\r\n\005brand\030"
    "\020 \001(\t\022\021\n\tphoneType\030\021 \001(\t\022\025\n\rsystemVersio"
    "n\030\022 \001(\t\022\017\n\007appName\030\023 \001(\t\022\022\n\nappVersion\030\024"
    " \001(\t\022\023\n\013packageName\030\025 \001(\t\022\022\n\nsdkVersion\030"
    "\026 \001(\tB\026\n\022cn.ciaapp.protobufH\001", 429);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "CiaProtocol.proto", &protobuf_RegisterTypes);
  ciaMessage::default_instance_ = new ciaMessage();
  ciaMessage::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_CiaProtocol_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_CiaProtocol_2eproto {
  StaticDescriptorInitializer_CiaProtocol_2eproto() {
    protobuf_AddDesc_CiaProtocol_2eproto();
  }
} static_descriptor_initializer_CiaProtocol_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int ciaMessage::kTypeFieldNumber;
const int ciaMessage::kSignalIdFieldNumber;
const int ciaMessage::kStatusFieldNumber;
const int ciaMessage::kPnFieldNumber;
const int ciaMessage::kAppIdFieldNumber;
const int ciaMessage::kAuthKeyFieldNumber;
const int ciaMessage::kImsiFieldNumber;
const int ciaMessage::kTransIdFieldNumber;
const int ciaMessage::kAuthCodeFieldNumber;
const int ciaMessage::kTimeoutFieldNumber;
const int ciaMessage::kDesFieldNumber;
const int ciaMessage::kImeiFieldNumber;
const int ciaMessage::kMacFieldNumber;
const int ciaMessage::kBluetoothFieldNumber;
const int ciaMessage::kAndroidIdFieldNumber;
const int ciaMessage::kBrandFieldNumber;
const int ciaMessage::kPhoneTypeFieldNumber;
const int ciaMessage::kSystemVersionFieldNumber;
const int ciaMessage::kAppNameFieldNumber;
const int ciaMessage::kAppVersionFieldNumber;
const int ciaMessage::kPackageNameFieldNumber;
const int ciaMessage::kSdkVersionFieldNumber;
#endif  // !_MSC_VER

ciaMessage::ciaMessage()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ciaMessage)
}

void ciaMessage::InitAsDefaultInstance() {
}

ciaMessage::ciaMessage(const ciaMessage& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ciaMessage)
}

void ciaMessage::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  type_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  signalid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pn_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  authkey_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  imsi_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  transid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  authcode_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  timeout_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  des_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  imei_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mac_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bluetooth_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  androidid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  brand_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phonetype_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  systemversion_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appversion_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  packagename_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sdkversion_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ciaMessage::~ciaMessage() {
  // @@protoc_insertion_point(destructor:ciaMessage)
  SharedDtor();
}

void ciaMessage::SharedDtor() {
  if (type_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete type_;
  }
  if (signalid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete signalid_;
  }
  if (status_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete status_;
  }
  if (pn_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete pn_;
  }
  if (appid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete appid_;
  }
  if (authkey_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete authkey_;
  }
  if (imsi_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete imsi_;
  }
  if (transid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete transid_;
  }
  if (authcode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete authcode_;
  }
  if (timeout_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete timeout_;
  }
  if (des_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete des_;
  }
  if (imei_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete imei_;
  }
  if (mac_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete mac_;
  }
  if (bluetooth_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete bluetooth_;
  }
  if (androidid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete androidid_;
  }
  if (brand_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete brand_;
  }
  if (phonetype_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete phonetype_;
  }
  if (systemversion_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete systemversion_;
  }
  if (appname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete appname_;
  }
  if (appversion_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete appversion_;
  }
  if (packagename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete packagename_;
  }
  if (sdkversion_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sdkversion_;
  }
  if (this != default_instance_) {
  }
}

void ciaMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ciaMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ciaMessage_descriptor_;
}

const ciaMessage& ciaMessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CiaProtocol_2eproto();
  return *default_instance_;
}

ciaMessage* ciaMessage::default_instance_ = NULL;

ciaMessage* ciaMessage::New() const {
  return new ciaMessage;
}

void ciaMessage::Clear() {
  if (_has_bits_[0 / 32] & 255) {
    if (has_type()) {
      if (type_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        type_->clear();
      }
    }
    if (has_signalid()) {
      if (signalid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        signalid_->clear();
      }
    }
    if (has_status()) {
      if (status_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        status_->clear();
      }
    }
    if (has_pn()) {
      if (pn_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        pn_->clear();
      }
    }
    if (has_appid()) {
      if (appid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        appid_->clear();
      }
    }
    if (has_authkey()) {
      if (authkey_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        authkey_->clear();
      }
    }
    if (has_imsi()) {
      if (imsi_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        imsi_->clear();
      }
    }
    if (has_transid()) {
      if (transid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        transid_->clear();
      }
    }
  }
  if (_has_bits_[8 / 32] & 65280) {
    if (has_authcode()) {
      if (authcode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        authcode_->clear();
      }
    }
    if (has_timeout()) {
      if (timeout_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        timeout_->clear();
      }
    }
    if (has_des()) {
      if (des_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        des_->clear();
      }
    }
    if (has_imei()) {
      if (imei_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        imei_->clear();
      }
    }
    if (has_mac()) {
      if (mac_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        mac_->clear();
      }
    }
    if (has_bluetooth()) {
      if (bluetooth_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        bluetooth_->clear();
      }
    }
    if (has_androidid()) {
      if (androidid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        androidid_->clear();
      }
    }
    if (has_brand()) {
      if (brand_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        brand_->clear();
      }
    }
  }
  if (_has_bits_[16 / 32] & 4128768) {
    if (has_phonetype()) {
      if (phonetype_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        phonetype_->clear();
      }
    }
    if (has_systemversion()) {
      if (systemversion_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        systemversion_->clear();
      }
    }
    if (has_appname()) {
      if (appname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        appname_->clear();
      }
    }
    if (has_appversion()) {
      if (appversion_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        appversion_->clear();
      }
    }
    if (has_packagename()) {
      if (packagename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        packagename_->clear();
      }
    }
    if (has_sdkversion()) {
      if (sdkversion_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        sdkversion_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ciaMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ciaMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string type = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->type().data(), this->type().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "type");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_signalId;
        break;
      }

      // optional string signalId = 2;
      case 2: {
        if (tag == 18) {
         parse_signalId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_signalid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->signalid().data(), this->signalid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "signalid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_status;
        break;
      }

      // optional string status = 3;
      case 3: {
        if (tag == 26) {
         parse_status:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_status()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->status().data(), this->status().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "status");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_pn;
        break;
      }

      // optional string pn = 4;
      case 4: {
        if (tag == 34) {
         parse_pn:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pn()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->pn().data(), this->pn().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "pn");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_appId;
        break;
      }

      // optional string appId = 5;
      case 5: {
        if (tag == 42) {
         parse_appId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->appid().data(), this->appid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "appid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_authKey;
        break;
      }

      // optional string authKey = 6;
      case 6: {
        if (tag == 50) {
         parse_authKey:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_authkey()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->authkey().data(), this->authkey().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "authkey");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_imsi;
        break;
      }

      // optional string imsi = 7;
      case 7: {
        if (tag == 58) {
         parse_imsi:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_imsi()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->imsi().data(), this->imsi().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "imsi");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_transId;
        break;
      }

      // optional string transId = 8;
      case 8: {
        if (tag == 66) {
         parse_transId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_transid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->transid().data(), this->transid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "transid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_authCode;
        break;
      }

      // optional string authCode = 9;
      case 9: {
        if (tag == 74) {
         parse_authCode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_authcode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->authcode().data(), this->authcode().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "authcode");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_timeout;
        break;
      }

      // optional string timeout = 10;
      case 10: {
        if (tag == 82) {
         parse_timeout:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_timeout()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->timeout().data(), this->timeout().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "timeout");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_des;
        break;
      }

      // optional string des = 11;
      case 11: {
        if (tag == 90) {
         parse_des:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_des()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->des().data(), this->des().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "des");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_imei;
        break;
      }

      // optional string imei = 12;
      case 12: {
        if (tag == 98) {
         parse_imei:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_imei()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->imei().data(), this->imei().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "imei");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(106)) goto parse_mac;
        break;
      }

      // optional string mac = 13;
      case 13: {
        if (tag == 106) {
         parse_mac:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mac()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->mac().data(), this->mac().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "mac");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(114)) goto parse_bluetooth;
        break;
      }

      // optional string bluetooth = 14;
      case 14: {
        if (tag == 114) {
         parse_bluetooth:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bluetooth()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->bluetooth().data(), this->bluetooth().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "bluetooth");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(122)) goto parse_androidId;
        break;
      }

      // optional string androidId = 15;
      case 15: {
        if (tag == 122) {
         parse_androidId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_androidid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->androidid().data(), this->androidid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "androidid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(130)) goto parse_brand;
        break;
      }

      // optional string brand = 16;
      case 16: {
        if (tag == 130) {
         parse_brand:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_brand()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->brand().data(), this->brand().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "brand");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(138)) goto parse_phoneType;
        break;
      }

      // optional string phoneType = 17;
      case 17: {
        if (tag == 138) {
         parse_phoneType:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_phonetype()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->phonetype().data(), this->phonetype().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "phonetype");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(146)) goto parse_systemVersion;
        break;
      }

      // optional string systemVersion = 18;
      case 18: {
        if (tag == 146) {
         parse_systemVersion:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_systemversion()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->systemversion().data(), this->systemversion().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "systemversion");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(154)) goto parse_appName;
        break;
      }

      // optional string appName = 19;
      case 19: {
        if (tag == 154) {
         parse_appName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->appname().data(), this->appname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "appname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(162)) goto parse_appVersion;
        break;
      }

      // optional string appVersion = 20;
      case 20: {
        if (tag == 162) {
         parse_appVersion:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appversion()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->appversion().data(), this->appversion().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "appversion");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(170)) goto parse_packageName;
        break;
      }

      // optional string packageName = 21;
      case 21: {
        if (tag == 170) {
         parse_packageName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_packagename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->packagename().data(), this->packagename().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "packagename");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(178)) goto parse_sdkVersion;
        break;
      }

      // optional string sdkVersion = 22;
      case 22: {
        if (tag == 178) {
         parse_sdkVersion:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sdkversion()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sdkversion().data(), this->sdkversion().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "sdkversion");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ciaMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ciaMessage)
  return false;
#undef DO_
}

void ciaMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ciaMessage)
  // required string type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->type(), output);
  }

  // optional string signalId = 2;
  if (has_signalid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->signalid().data(), this->signalid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "signalid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->signalid(), output);
  }

  // optional string status = 3;
  if (has_status()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->status().data(), this->status().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "status");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->status(), output);
  }

  // optional string pn = 4;
  if (has_pn()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->pn().data(), this->pn().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pn");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->pn(), output);
  }

  // optional string appId = 5;
  if (has_appid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->appid().data(), this->appid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "appid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->appid(), output);
  }

  // optional string authKey = 6;
  if (has_authkey()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->authkey().data(), this->authkey().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "authkey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->authkey(), output);
  }

  // optional string imsi = 7;
  if (has_imsi()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->imsi().data(), this->imsi().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "imsi");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->imsi(), output);
  }

  // optional string transId = 8;
  if (has_transid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->transid().data(), this->transid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "transid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->transid(), output);
  }

  // optional string authCode = 9;
  if (has_authcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->authcode().data(), this->authcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "authcode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->authcode(), output);
  }

  // optional string timeout = 10;
  if (has_timeout()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->timeout().data(), this->timeout().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "timeout");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->timeout(), output);
  }

  // optional string des = 11;
  if (has_des()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->des().data(), this->des().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "des");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->des(), output);
  }

  // optional string imei = 12;
  if (has_imei()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->imei().data(), this->imei().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "imei");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->imei(), output);
  }

  // optional string mac = 13;
  if (has_mac()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mac().data(), this->mac().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mac");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->mac(), output);
  }

  // optional string bluetooth = 14;
  if (has_bluetooth()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bluetooth().data(), this->bluetooth().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "bluetooth");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->bluetooth(), output);
  }

  // optional string androidId = 15;
  if (has_androidid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->androidid().data(), this->androidid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "androidid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      15, this->androidid(), output);
  }

  // optional string brand = 16;
  if (has_brand()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->brand().data(), this->brand().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "brand");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      16, this->brand(), output);
  }

  // optional string phoneType = 17;
  if (has_phonetype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->phonetype().data(), this->phonetype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "phonetype");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      17, this->phonetype(), output);
  }

  // optional string systemVersion = 18;
  if (has_systemversion()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->systemversion().data(), this->systemversion().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "systemversion");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      18, this->systemversion(), output);
  }

  // optional string appName = 19;
  if (has_appname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->appname().data(), this->appname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "appname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      19, this->appname(), output);
  }

  // optional string appVersion = 20;
  if (has_appversion()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->appversion().data(), this->appversion().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "appversion");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      20, this->appversion(), output);
  }

  // optional string packageName = 21;
  if (has_packagename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->packagename().data(), this->packagename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "packagename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      21, this->packagename(), output);
  }

  // optional string sdkVersion = 22;
  if (has_sdkversion()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sdkversion().data(), this->sdkversion().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sdkversion");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      22, this->sdkversion(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ciaMessage)
}

::google::protobuf::uint8* ciaMessage::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ciaMessage)
  // required string type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->type(), target);
  }

  // optional string signalId = 2;
  if (has_signalid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->signalid().data(), this->signalid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "signalid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->signalid(), target);
  }

  // optional string status = 3;
  if (has_status()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->status().data(), this->status().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "status");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->status(), target);
  }

  // optional string pn = 4;
  if (has_pn()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->pn().data(), this->pn().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pn");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->pn(), target);
  }

  // optional string appId = 5;
  if (has_appid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->appid().data(), this->appid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "appid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->appid(), target);
  }

  // optional string authKey = 6;
  if (has_authkey()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->authkey().data(), this->authkey().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "authkey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->authkey(), target);
  }

  // optional string imsi = 7;
  if (has_imsi()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->imsi().data(), this->imsi().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "imsi");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->imsi(), target);
  }

  // optional string transId = 8;
  if (has_transid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->transid().data(), this->transid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "transid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->transid(), target);
  }

  // optional string authCode = 9;
  if (has_authcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->authcode().data(), this->authcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "authcode");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->authcode(), target);
  }

  // optional string timeout = 10;
  if (has_timeout()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->timeout().data(), this->timeout().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "timeout");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->timeout(), target);
  }

  // optional string des = 11;
  if (has_des()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->des().data(), this->des().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "des");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->des(), target);
  }

  // optional string imei = 12;
  if (has_imei()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->imei().data(), this->imei().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "imei");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->imei(), target);
  }

  // optional string mac = 13;
  if (has_mac()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mac().data(), this->mac().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mac");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->mac(), target);
  }

  // optional string bluetooth = 14;
  if (has_bluetooth()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bluetooth().data(), this->bluetooth().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "bluetooth");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->bluetooth(), target);
  }

  // optional string androidId = 15;
  if (has_androidid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->androidid().data(), this->androidid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "androidid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->androidid(), target);
  }

  // optional string brand = 16;
  if (has_brand()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->brand().data(), this->brand().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "brand");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        16, this->brand(), target);
  }

  // optional string phoneType = 17;
  if (has_phonetype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->phonetype().data(), this->phonetype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "phonetype");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        17, this->phonetype(), target);
  }

  // optional string systemVersion = 18;
  if (has_systemversion()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->systemversion().data(), this->systemversion().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "systemversion");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        18, this->systemversion(), target);
  }

  // optional string appName = 19;
  if (has_appname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->appname().data(), this->appname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "appname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        19, this->appname(), target);
  }

  // optional string appVersion = 20;
  if (has_appversion()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->appversion().data(), this->appversion().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "appversion");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        20, this->appversion(), target);
  }

  // optional string packageName = 21;
  if (has_packagename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->packagename().data(), this->packagename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "packagename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        21, this->packagename(), target);
  }

  // optional string sdkVersion = 22;
  if (has_sdkversion()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sdkversion().data(), this->sdkversion().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sdkversion");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        22, this->sdkversion(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ciaMessage)
  return target;
}

int ciaMessage::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->type());
    }

    // optional string signalId = 2;
    if (has_signalid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->signalid());
    }

    // optional string status = 3;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->status());
    }

    // optional string pn = 4;
    if (has_pn()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->pn());
    }

    // optional string appId = 5;
    if (has_appid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->appid());
    }

    // optional string authKey = 6;
    if (has_authkey()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->authkey());
    }

    // optional string imsi = 7;
    if (has_imsi()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->imsi());
    }

    // optional string transId = 8;
    if (has_transid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->transid());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional string authCode = 9;
    if (has_authcode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->authcode());
    }

    // optional string timeout = 10;
    if (has_timeout()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->timeout());
    }

    // optional string des = 11;
    if (has_des()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->des());
    }

    // optional string imei = 12;
    if (has_imei()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->imei());
    }

    // optional string mac = 13;
    if (has_mac()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->mac());
    }

    // optional string bluetooth = 14;
    if (has_bluetooth()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->bluetooth());
    }

    // optional string androidId = 15;
    if (has_androidid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->androidid());
    }

    // optional string brand = 16;
    if (has_brand()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->brand());
    }

  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    // optional string phoneType = 17;
    if (has_phonetype()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->phonetype());
    }

    // optional string systemVersion = 18;
    if (has_systemversion()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->systemversion());
    }

    // optional string appName = 19;
    if (has_appname()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->appname());
    }

    // optional string appVersion = 20;
    if (has_appversion()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->appversion());
    }

    // optional string packageName = 21;
    if (has_packagename()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->packagename());
    }

    // optional string sdkVersion = 22;
    if (has_sdkversion()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sdkversion());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ciaMessage::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ciaMessage* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ciaMessage*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ciaMessage::MergeFrom(const ciaMessage& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_signalid()) {
      set_signalid(from.signalid());
    }
    if (from.has_status()) {
      set_status(from.status());
    }
    if (from.has_pn()) {
      set_pn(from.pn());
    }
    if (from.has_appid()) {
      set_appid(from.appid());
    }
    if (from.has_authkey()) {
      set_authkey(from.authkey());
    }
    if (from.has_imsi()) {
      set_imsi(from.imsi());
    }
    if (from.has_transid()) {
      set_transid(from.transid());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_authcode()) {
      set_authcode(from.authcode());
    }
    if (from.has_timeout()) {
      set_timeout(from.timeout());
    }
    if (from.has_des()) {
      set_des(from.des());
    }
    if (from.has_imei()) {
      set_imei(from.imei());
    }
    if (from.has_mac()) {
      set_mac(from.mac());
    }
    if (from.has_bluetooth()) {
      set_bluetooth(from.bluetooth());
    }
    if (from.has_androidid()) {
      set_androidid(from.androidid());
    }
    if (from.has_brand()) {
      set_brand(from.brand());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_phonetype()) {
      set_phonetype(from.phonetype());
    }
    if (from.has_systemversion()) {
      set_systemversion(from.systemversion());
    }
    if (from.has_appname()) {
      set_appname(from.appname());
    }
    if (from.has_appversion()) {
      set_appversion(from.appversion());
    }
    if (from.has_packagename()) {
      set_packagename(from.packagename());
    }
    if (from.has_sdkversion()) {
      set_sdkversion(from.sdkversion());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ciaMessage::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ciaMessage::CopyFrom(const ciaMessage& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ciaMessage::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void ciaMessage::Swap(ciaMessage* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(signalid_, other->signalid_);
    std::swap(status_, other->status_);
    std::swap(pn_, other->pn_);
    std::swap(appid_, other->appid_);
    std::swap(authkey_, other->authkey_);
    std::swap(imsi_, other->imsi_);
    std::swap(transid_, other->transid_);
    std::swap(authcode_, other->authcode_);
    std::swap(timeout_, other->timeout_);
    std::swap(des_, other->des_);
    std::swap(imei_, other->imei_);
    std::swap(mac_, other->mac_);
    std::swap(bluetooth_, other->bluetooth_);
    std::swap(androidid_, other->androidid_);
    std::swap(brand_, other->brand_);
    std::swap(phonetype_, other->phonetype_);
    std::swap(systemversion_, other->systemversion_);
    std::swap(appname_, other->appname_);
    std::swap(appversion_, other->appversion_);
    std::swap(packagename_, other->packagename_);
    std::swap(sdkversion_, other->sdkversion_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ciaMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ciaMessage_descriptor_;
  metadata.reflection = ciaMessage_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
